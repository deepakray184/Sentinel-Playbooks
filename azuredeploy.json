{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "For_each": {
                "actions": {
                    "Watchlists_-_Add_a_new_Watchlist_Item": {
                        "inputs": {
                            "body": {
                                "IP": "@{items('For_each')?['IP']}"
                            },
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                                }
                            },
                            "method": "put",
                            "path": "/Watchlists/subscriptions/@{encodeURIComponent('{Subscription ID}')}/resourceGroups/@{encodeURIComponent('{Resource Group name}')}/workspaces/@{encodeURIComponent('{Workspace ID}')}/watchlists/@{encodeURIComponent('External_IOC','')}/watchlistItem"
                        },
                        "runAfter": {},
                        "type": "ApiConnection"
                    }
                },
                "foreach": "@body('Run_query_and_list_results')?['value']",
                "runAfter": {
                    "Run_query_and_list_results": [
                        "Succeeded"
                    ]
                },
                "type": "Foreach"
            },
            "Run_query_and_list_results": {
                "inputs": {
                    "body": "let MISPFeed1 = externaldata(DestIP: string)[@\"https://raw.githubusercontent.com/stamparm/ipsum/master/levels/7.txt\"] with (format=\"txt\", ignoreFirstRecord=True);\nlet MISPFeed2 = externaldata(DestIP: string)[@\"https://raw.githubusercontent.com/stamparm/ipsum/master/levels/6.txt\"] with (format=\"txt\", ignoreFirstRecord=True);\nlet MISPFeed3 = externaldata(DestIP: string)[@\"https://raw.githubusercontent.com/stamparm/ipsum/master/levels/8.txt\"] with (format=\"txt\", ignoreFirstRecord=True);\nlet MiraiFeed = externaldata(DestIP: string)[@\"https://mirai.security.gives/data/ip_list.txt\"] with (format=\"txt\", ignoreFirstRecord=True);\nlet ProofPointFeed = externaldata(DestIP: string)[@\"https://rules.emergingthreats.net/blockrules/compromised-ips.txt\"] with (format=\"txt\", ignoreFirstRecord=True);\nlet FeodoFeed = externaldata(DestIP: string)[@\"https://feodotracker.abuse.ch/downloads/ipblocklist.csv\"] with (format=\"txt\", ignoreFirstRecord=True);\nlet DiamondFoxFeed = externaldata(DestIP: string)[@\"https://raw.githubusercontent.com/pan-unit42/iocs/master/diamondfox/diamondfox_panels.txt\"] with (format=\"txt\", ignoreFirstRecord=True);\nlet CINFeed = externaldata(DestIP: string)[@\"https://cinsscore.com/list/ci-badguys.txt\"] with (format=\"txt\", ignoreFirstRecord=True);\nlet blocklistdeFeed = externaldata(DestIP: string)[@\"https://lists.blocklist.de/lists/all.txt\"] with (format=\"txt\", ignoreFirstRecord=True);\nlet C2IntelFeeds = externaldata(DestIP: string, ioc: string)[@\"https://raw.githubusercontent.com/drb-ra/C2IntelFeeds/master/feeds/IPC2s-30day.csv\"] with (format=\"csv\", ignoreFirstRecord=True);\nlet DigitalsideFeed = externaldata(DestIP: string)[@\"https://osint.digitalside.it/Threat-Intel/lists/latestips.txt\"] with (format=\"txt\", ignoreFirstRecord=True);\nlet MontySecurityFeed = externaldata(DestIP: string)[@\"https://raw.githubusercontent.com/montysecurity/C2-Tracker/main/data/all.txt\"] with (format=\"txt\", ignoreFirstRecord=True);\nlet IPRegex = '[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}';\nlet MaliciousIP1 = materialize (\n    MISPFeed1 \n    | where DestIP matches regex IPRegex\n    | distinct DestIP\n    );\nlet MaliciousIP2 = materialize (\n    MISPFeed2 \n    | where DestIP matches regex IPRegex\n    | distinct DestIP\n    );\nlet MaliciousIP3 = materialize (\n    MISPFeed3 \n    | where DestIP matches regex IPRegex\n    | distinct DestIP\n    );\nlet MaliciousIP4 = materialize (\n    MiraiFeed \n    | where DestIP matches regex IPRegex\n    | distinct DestIP\n    );\nlet MaliciousIP5 = materialize (\n    ProofPointFeed \n    | where DestIP matches regex IPRegex\n    | distinct DestIP\n    );\nlet MaliciousIP6 = materialize (\n    FeodoFeed \n    | extend DestIP = extract(IPRegex, 0, DestIP)\n    | where isnotempty(DestIP)\n    | distinct DestIP\n    );\nlet MaliciousIP7 = materialize (\n    DiamondFoxFeed \n    | extend DestIP = extract(@'//(.*?)/', 1, DestIP)\n    | extend DestIPToLower = tolower(DestIP)\n    | where DestIPToLower matches regex IPRegex\n    | distinct DestIP\n    );\nlet MaliciousIP8 = materialize (\n    CINFeed \n    | where DestIP matches regex IPRegex\n    | distinct DestIP\n    );\nlet MaliciousIP9 = materialize (\n    blocklistdeFeed \n    | where DestIP matches regex IPRegex\n    | distinct DestIP\n    );\nlet MaliciousIP10 = C2IntelFeeds\n    | project DestIP;\nlet MaliciousIP11 = materialize (\n    DigitalsideFeed\n    | where DestIP matches regex IPRegex\n    | distinct DestIP\n    );\nlet MaliciousIP12 = materialize (\n    MontySecurityFeed\n    | where DestIP matches regex IPRegex\n    | distinct DestIP\n    );\nunion MaliciousIP1, MaliciousIP2, MaliciousIP3, MaliciousIP4, MaliciousIP5, MaliciousIP6, MaliciousIP7, MaliciousIP8, MaliciousIP9, MaliciousIP10, MaliciousIP11, MaliciousIP12\n| where not(ipv4_is_private( DestIP))\n| extend IP = DestIP\n| project IP",
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                        }
                    },
                    "method": "post",
                    "path": "/queryData",
                    "queries": {
                        "resourcegroups": "{Resource Group name}",
                        "resourcename": "{Resource name}",
                        "resourcetype": "Log Analytics Workspace",
                        "subscriptions": "{Subscription ID}",
                        "timerange": "Last hour"
                    }
                },
                "runAfter": {},
                "type": "ApiConnection"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "Recurrence": {
                "evaluatedRecurrence": {
                    "frequency": "Day",
                    "interval": 1,
                    "schedule": {
                        "hours": [
                            "22"
                        ]
                    },
                    "timeZone": "India Standard Time"
                },
                "recurrence": {
                    "frequency": "Day",
                    "interval": 1,
                    "schedule": {
                        "hours": [
                            "22"
                        ]
                    },
                    "timeZone": "India Standard Time"
                },
                "type": "Recurrence"
            }
        }
    },
    "parameters": {
        "$connections": {
            "value": {
                "azuremonitorlogs": {
                    "connectionId": "/subscriptions/{Subscription ID}/resourceGroups/{Resource Group name}/providers/Microsoft.Web/connections/azuremonitorlogs-4",
                    "connectionName": "azuremonitorlogs-4",
                    "id": "/subscriptions/{Subscription ID}/providers/Microsoft.Web/locations/centralindia/managedApis/azuremonitorlogs"
                },
                "azuresentinel_1": {
                    "connectionId": "/subscriptions/{Subscription ID}/resourceGroups/{Resource Group name}/providers/Microsoft.Web/connections/azuresentinel-5",
                    "connectionName": "azuresentinel-5",
                    "id": "/subscriptions/{Subscription ID}/providers/Microsoft.Web/locations/centralindia/managedApis/azuresentinel"
                }
            }
        }
    }
}